{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\WEB\\\\Grandz\\\\apps\\\\sample-embedded-app\\\\src\\\\context\\\\state.js\";\nimport { createContext, useContext, useState } from 'react';\nconst AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper({\n  children\n}) {\n  const {\n    0: prices,\n    1: setPrices\n  } = useState([{\n    id: '111',\n    title: \"Simba\",\n    url: 'https://simbasleep.com/products/simba-hybrid-pro-mattress',\n    path: 'document.querySelector(\"#shopify-section-r-product-form > div > form > div:nth-child(7) > p > span.inline-block.text-36.text-dark.font-600\")'\n  }]);\n\n  const updatePrice = (id, title, url, path) => {\n    const newPrice = {\n      id,\n      url,\n      path,\n      title\n    };\n    const idx = prices.findIndex(price => price.id = id);\n    setPrices([...prices.slice(0, idx), newPrice, ...prices.slice(idx + 1)]);\n  };\n\n  const addPrice = (title, url, path) => {\n    const id = Date.now();\n    const newPrice = {\n      id,\n      url,\n      path,\n      title\n    };\n    setPrices([...prices, newPrice, ...prices.slice(idx + 1)]);\n  };\n\n  let sharedState = {\n    prices,\n    updatePrice\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: sharedState,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["D:/WEB/Grandz/apps/sample-embedded-app/src/context/state.js"],"names":["createContext","useContext","useState","AppContext","AppWrapper","children","prices","setPrices","id","title","url","path","updatePrice","newPrice","idx","findIndex","price","slice","addPrice","Date","now","sharedState","useAppContext"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,UAAU,gBAAGH,aAAa,EAAhC;AAEA,OAAO,SAASI,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkC;AACvC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,CAAC;AAACM,IAAAA,EAAE,EAAE,KAAL;AAAYC,IAAAA,KAAK,EAAC,OAAlB;AAA2BC,IAAAA,GAAG,EAAE,2DAAhC;AAA6FC,IAAAA,IAAI,EAAE;AAAnG,GAAD,CAAD,CAApC;;AAEA,QAAMC,WAAW,GAAG,CAACJ,EAAD,EAAKC,KAAL,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC5C,UAAME,QAAQ,GAAG;AACfL,MAAAA,EADe;AAEfE,MAAAA,GAFe;AAGfC,MAAAA,IAHe;AAIfF,MAAAA;AAJe,KAAjB;AAMA,UAAMK,GAAG,GAAGR,MAAM,CAACS,SAAP,CAAiBC,KAAK,IAAIA,KAAK,CAACR,EAAN,GAAWA,EAArC,CAAZ;AAEAD,IAAAA,SAAS,CAAC,CACR,GAAGD,MAAM,CAACW,KAAP,CAAa,CAAb,EAAgBH,GAAhB,CADK,EAERD,QAFQ,EAGR,GAAGP,MAAM,CAACW,KAAP,CAAaH,GAAG,GAAC,CAAjB,CAHK,CAAD,CAAT;AAKD,GAdD;;AAgBA,QAAMI,QAAQ,GAAG,CAACT,KAAD,EAAQC,GAAR,EAAaC,IAAb,KAAsB;AACrC,UAAMH,EAAE,GAAGW,IAAI,CAACC,GAAL,EAAX;AACA,UAAMP,QAAQ,GAAG;AACfL,MAAAA,EADe;AAEfE,MAAAA,GAFe;AAGfC,MAAAA,IAHe;AAIfF,MAAAA;AAJe,KAAjB;AAOAF,IAAAA,SAAS,CAAC,CACR,GAAGD,MADK,EAERO,QAFQ,EAGR,GAAGP,MAAM,CAACW,KAAP,CAAaH,GAAG,GAAC,CAAjB,CAHK,CAAD,CAAT;AAKD,GAdD;;AAgBA,MAAIO,WAAW,GAAG;AAACf,IAAAA,MAAD;AAASM,IAAAA;AAAT,GAAlB;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAES,WAA5B;AAAA,cACGhB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,SAASiB,aAAT,GAAyB;AAC9B,SAAOrB,UAAU,CAACE,UAAD,CAAjB;AACD","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport function AppWrapper({ children }) {\r\n  const [prices, setPrices] = useState([{id: '111', title:\"Simba\", url: 'https://simbasleep.com/products/simba-hybrid-pro-mattress', path: 'document.querySelector(\"#shopify-section-r-product-form > div > form > div:nth-child(7) > p > span.inline-block.text-36.text-dark.font-600\")'}]);\r\n\r\n  const updatePrice = (id, title, url, path) => {\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    const idx = prices.findIndex(price => price.id = id)\r\n    \r\n    setPrices([\r\n      ...prices.slice(0, idx),\r\n      newPrice,\r\n      ...prices.slice(idx+1)\r\n    ])\r\n  }\r\n\r\n  const addPrice = (title, url, path) => {\r\n    const id = Date.now();\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    \r\n    setPrices([\r\n      ...prices,\r\n      newPrice,\r\n      ...prices.slice(idx+1)\r\n    ])\r\n  }\r\n\r\n  let sharedState = {prices, updatePrice};\r\n  \r\n  return (\r\n    <AppContext.Provider value={sharedState}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}"]},"metadata":{},"sourceType":"module"}