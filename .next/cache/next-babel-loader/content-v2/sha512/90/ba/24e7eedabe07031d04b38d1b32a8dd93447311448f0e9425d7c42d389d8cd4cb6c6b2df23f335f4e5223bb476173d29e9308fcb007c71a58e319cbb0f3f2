{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\WEB\\\\Grandz\\\\apps\\\\sample-embedded-app\\\\src\\\\context\\\\state.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport ScraperService from '../services/scraperService';\nvar AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([{\n    id: '111',\n    title: \"Simba\",\n    url: 'https://simbasleep.com/products/simba-hybrid-pro-mattress',\n    path: 'document.querySelector(\"#shopify-section-r-product-form > div > form > div:nth-child(7) > p > span.inline-block.text-36.text-dark.font-600\")'\n  }]),\n      prices = _useState[0],\n      setPrices = _useState[1];\n\n  var updatePrice = function updatePrice(id, title, url, path) {\n    var newPrice = {\n      id: id,\n      url: url,\n      path: path,\n      title: title\n    };\n    var idx = prices.findIndex(function (price) {\n      return price.id = id;\n    });\n    setPrices([].concat(_toConsumableArray(prices.slice(0, idx)), [newPrice], _toConsumableArray(prices.slice(idx + 1))));\n  };\n\n  var addPrice = function addPrice(title, url, path) {\n    var id = Date.now();\n    var newPrice = {\n      id: id,\n      url: url,\n      path: path,\n      title: title\n    };\n    setPrices([].concat(_toConsumableArray(prices), [newPrice]));\n  };\n\n  var removePrice = function removePrice(id) {\n    var newPrices = prices.filter(function (price) {\n      return price.id != id;\n    });\n    setPrices(newPrices);\n  };\n\n  var scraperService = new ScraperService();\n\n  var updateAllPrices = function updateAllPrices(arr) {\n    setPrices([].concat(_toConsumableArray(prices.slice(0, idx)), [newPrice], _toConsumableArray(prices.slice(idx + 1))));\n  };\n\n  var sharedState = {\n    prices: prices,\n    updatePrice: updatePrice,\n    addPrice: addPrice,\n    removePrice: removePrice\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: sharedState,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppWrapper, \"PBzpzSDA77iOSHj5049tgchLB8E=\");\n\n_c = AppWrapper;\nexport function useAppContext() {\n  _s2();\n\n  return useContext(AppContext);\n}\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"sources":["D:/WEB/Grandz/apps/sample-embedded-app/src/context/state.js"],"names":["createContext","useContext","useState","ScraperService","AppContext","AppWrapper","children","id","title","url","path","prices","setPrices","updatePrice","newPrice","idx","findIndex","price","slice","addPrice","Date","now","removePrice","newPrices","filter","scraperService","updateAllPrices","arr","sharedState","useAppContext"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,IAAMC,UAAU,gBAAGJ,aAAa,EAAhC;AAEA,OAAO,SAASK,UAAT,OAAkC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACXJ,QAAQ,CAAC,CAAC;AAACK,IAAAA,EAAE,EAAE,KAAL;AAAYC,IAAAA,KAAK,EAAC,OAAlB;AAA2BC,IAAAA,GAAG,EAAE,2DAAhC;AAA6FC,IAAAA,IAAI,EAAE;AAAnG,GAAD,CAAD,CADG;AAAA,MAChCC,MADgC;AAAA,MACxBC,SADwB;;AAGvC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACN,EAAD,EAAKC,KAAL,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC5C,QAAMI,QAAQ,GAAG;AACfP,MAAAA,EAAE,EAAFA,EADe;AAEfE,MAAAA,GAAG,EAAHA,GAFe;AAGfC,MAAAA,IAAI,EAAJA,IAHe;AAIfF,MAAAA,KAAK,EAALA;AAJe,KAAjB;AAMA,QAAMO,GAAG,GAAGJ,MAAM,CAACK,SAAP,CAAiB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACV,EAAN,GAAWA,EAAf;AAAA,KAAtB,CAAZ;AAEAK,IAAAA,SAAS,8BACJD,MAAM,CAACO,KAAP,CAAa,CAAb,EAAgBH,GAAhB,CADI,IAEPD,QAFO,sBAGJH,MAAM,CAACO,KAAP,CAAaH,GAAG,GAAC,CAAjB,CAHI,GAAT;AAKD,GAdD;;AAgBA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACX,KAAD,EAAQC,GAAR,EAAaC,IAAb,EAAsB;AACrC,QAAMH,EAAE,GAAGa,IAAI,CAACC,GAAL,EAAX;AACA,QAAMP,QAAQ,GAAG;AACfP,MAAAA,EAAE,EAAFA,EADe;AAEfE,MAAAA,GAAG,EAAHA,GAFe;AAGfC,MAAAA,IAAI,EAAJA,IAHe;AAIfF,MAAAA,KAAK,EAALA;AAJe,KAAjB;AAOAI,IAAAA,SAAS,8BACJD,MADI,IAEPG,QAFO,GAAT;AAID,GAbD;;AAeA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACf,EAAD,EAAQ;AAC1B,QAAMgB,SAAS,GAAGZ,MAAM,CAACa,MAAP,CAAc,UAAAP,KAAK;AAAA,aAAIA,KAAK,CAACV,EAAN,IAAYA,EAAhB;AAAA,KAAnB,CAAlB;AAEAK,IAAAA,SAAS,CAACW,SAAD,CAAT;AACD,GAJD;;AAMA,MAAME,cAAc,GAAG,IAAItB,cAAJ,EAAvB;;AAEA,MAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAG/Bf,IAAAA,SAAS,8BACJD,MAAM,CAACO,KAAP,CAAa,CAAb,EAAgBH,GAAhB,CADI,IAEPD,QAFO,sBAGJH,MAAM,CAACO,KAAP,CAAaH,GAAG,GAAC,CAAjB,CAHI,GAAT;AAKD,GARD;;AAUA,MAAIa,WAAW,GAAG;AAACjB,IAAAA,MAAM,EAANA,MAAD;AAASE,IAAAA,WAAW,EAAXA,WAAT;AAAsBM,IAAAA,QAAQ,EAARA,QAAtB;AAAgCG,IAAAA,WAAW,EAAXA;AAAhC,GAAlB;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEM,WAA5B;AAAA,cACGtB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3DeD,U;;KAAAA,U;AA6DhB,OAAO,SAASwB,aAAT,GAAyB;AAAA;;AAC9B,SAAO5B,UAAU,CAACG,UAAD,CAAjB;AACD;;IAFeyB,a","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport ScraperService from '../services/scraperService';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport function AppWrapper({ children }) {\r\n  const [prices, setPrices] = useState([{id: '111', title:\"Simba\", url: 'https://simbasleep.com/products/simba-hybrid-pro-mattress', path: 'document.querySelector(\"#shopify-section-r-product-form > div > form > div:nth-child(7) > p > span.inline-block.text-36.text-dark.font-600\")'}]);\r\n\r\n  const updatePrice = (id, title, url, path) => {\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    const idx = prices.findIndex(price => price.id = id)\r\n    \r\n    setPrices([\r\n      ...prices.slice(0, idx),\r\n      newPrice,\r\n      ...prices.slice(idx+1)\r\n    ])\r\n  }\r\n\r\n  const addPrice = (title, url, path) => {\r\n    const id = Date.now();\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    \r\n    setPrices([\r\n      ...prices,\r\n      newPrice\r\n    ])\r\n  }\r\n\r\n  const removePrice = (id) => {\r\n    const newPrices = prices.filter(price => price.id != id)\r\n    \r\n    setPrices(newPrices)\r\n  }\r\n\r\n  const scraperService = new ScraperService();\r\n\r\n  const updateAllPrices = (arr) => {\r\n   \r\n    \r\n    setPrices([\r\n      ...prices.slice(0, idx),\r\n      newPrice,\r\n      ...prices.slice(idx+1)\r\n    ])\r\n  }\r\n\r\n  let sharedState = {prices, updatePrice, addPrice, removePrice};\r\n  \r\n  return (\r\n    <AppContext.Provider value={sharedState}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}"]},"metadata":{},"sourceType":"module"}