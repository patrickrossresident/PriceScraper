{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"D:\\\\WEB\\\\Grandz\\\\apps\\\\sample-embedded-app\\\\src\\\\context\\\\state.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nvar AppContext = /*#__PURE__*/createContext();\nexport function AppWrapper(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      prices = _useState[0],\n      setPrices = _useState[1];\n\n  var updatePrice = function updatePrice(id, title, url, path) {\n    var newPrice = {\n      id: id,\n      url: url,\n      path: path,\n      title: title\n    };\n    var idx = prices.findIndex(function (price) {\n      return price.id = id;\n    });\n    var newPrices = prices.filter(function (price) {\n      return price.id != id;\n    });\n    newPrices.push(newPrice);\n    setPrices();\n  };\n\n  var addPrice = function addPrice(title, url, path) {\n    var id = Date.now();\n    var newPrice = {\n      id: id,\n      url: url,\n      path: path,\n      title: title\n    };\n    setPrices([].concat(_toConsumableArray(prices), [newPrice]));\n  };\n\n  var removePrice = function removePrice(id) {\n    var newPrices = prices.filter(function (price) {\n      return price.id != id;\n    });\n    setPrices(newPrices);\n  };\n\n  var getAllPrices = function getAllPrices(id) {\n    return fetch('/metafields/get').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setPrices(data);\n    });\n  };\n\n  var updateAllPrices = function updateAllPrices() {\n    return fetch('/metafields/', {\n      method: 'POST',\n      body: JSON.stringify(prices)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setPrices(data);\n    });\n  };\n\n  var sharedState = {\n    prices: prices,\n    updatePrice: updatePrice,\n    addPrice: addPrice,\n    removePrice: removePrice,\n    updateAllPrices: updateAllPrices,\n    getAllPrices: getAllPrices\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: sharedState,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppWrapper, \"5ExkfnXxxfzMKYdtizv/SBGAoWY=\");\n\n_c = AppWrapper;\nexport function useAppContext() {\n  _s2();\n\n  return useContext(AppContext);\n}\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"sources":["D:/WEB/Grandz/apps/sample-embedded-app/src/context/state.js"],"names":["createContext","useContext","useState","AppContext","AppWrapper","children","prices","setPrices","updatePrice","id","title","url","path","newPrice","idx","findIndex","price","newPrices","filter","push","addPrice","Date","now","removePrice","getAllPrices","fetch","then","response","json","data","updateAllPrices","method","body","JSON","stringify","sharedState","useAppContext"],"mappings":"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","sourcesContent":["import { createContext, useContext, useState } from 'react';\r\n\r\n\r\nconst AppContext = createContext();\r\n\r\nexport function AppWrapper({ children }) {\r\n  const [prices, setPrices] = useState([]);\r\n\r\n  const updatePrice = (id, title, url, path) => {\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    const idx = prices.findIndex(price => price.id = id)\r\n    const newPrices = prices.filter(price => price.id != id)\r\n    newPrices.push(newPrice);\r\n    setPrices()\r\n  }\r\n\r\n  const addPrice = (title, url, path) => {\r\n    const id = Date.now();\r\n    const newPrice = {\r\n      id,\r\n      url,\r\n      path,\r\n      title\r\n    }\r\n    \r\n    setPrices([\r\n      ...prices,\r\n      newPrice\r\n    ])\r\n  }\r\n\r\n  const removePrice = (id) => {\r\n    const newPrices = prices.filter(price => price.id != id)\r\n    \r\n    setPrices(newPrices)\r\n  }\r\n\r\n  const getAllPrices = (id) => {\r\n    return fetch('/metafields/get')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPrices(data)\r\n      })\r\n  }\r\n\r\n\r\n\r\n  const updateAllPrices = () => {\r\n    return fetch('/metafields/', {\r\n      method: 'POST',\r\n      body: JSON.stringify(prices)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setPrices(data)\r\n        \r\n      })\r\n  }\r\n\r\n  let sharedState = {prices, updatePrice, addPrice, removePrice, updateAllPrices, getAllPrices};\r\n  \r\n  return (\r\n    <AppContext.Provider value={sharedState}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}"]},"metadata":{},"sourceType":"module"}